name: ${APP_NAME}
configs:
  Devel Run: debug
  Devel Archive: release
  Prod Run: debug
  Prod Archive: release
settingGroups:
  testing:
    DUMMY_VALUE: ""
    #TEST_HOST: $(BUILT_PRODUCTS_DIR)/HostingApp.app/HostingApp
settings:
      configs:
        Devel Run:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEVEL DEBUG
        Devel Archive:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEVEL
        Prod Run:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: PROD DEBUG
        Prod Archive:
          SWIFT_ACTIVE_COMPILATION_CONDITIONS: PROD
options:
  bundleIdPrefix: it.synesthesia
  createIntermediateGroups: true
  deploymentTarget:
    iOS: "11.0"
fileGroups:
  - Murrayfile.json
  - Podfile
  - Gemfile
  - Brewfile
  - Makefile
  - README.md
  - Configuration
  - .gitignore
targets:
  ${APP_NAME}_iOS:
    type: application
    platform: iOS
    sources:
      - path: "Sources/App"
        excludes:
            - "Xibs/**/*"
            - "**/{tvOS}/**/*.{swift,xib}"
      - path: "Sources/App/Xibs/iOS"
        buildPhase: resources
    settings:
        base:
          DEVELOPMENT_TEAM: 6T384SC3AF
          SUPPORTS_MACCATALYST: YES
          DERIVE_MACCATALYST_PRODUCT_BUNDLE_IDENTIFIER: YES
        configs:
            Devel Run:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}.devel
            Devel Archive:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}.devel
            Prod Run:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}
            Prod Archive:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}
    scheme:
      gatherCoverageData: true
      testTargets:
        - ${APP_NAME}Tests_iOS
        - ModelTests
        - CoreTests
      configVariants:
        - Devel
        - Prod
    dependencies:
      - target: Model_iOS
      - target: Core_iOS
    preBuildScripts:
      - name: "SwiftLint"
        script: |
                swiftlint --config "${SRCROOT}/Configuration/config.swiftlint.yml"
    postBuildScripts:
      - name: "Crashlytics"
        script: |
                #"${PODS_ROOT}/FirebaseCrashlytics/run"
        inputFiles: |
                    $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)
  ${APP_NAME}_tvOS:
    type: application
    platform: tvOS
    sources:
      - path: "Sources/App"
        excludes:
            - "Xibs/iOS/**/*"
            - "**/{iOS}/**/*.{swift}"
      - path: "Sources/App/Xibs/tvOS"
        buildPhase: resources
    settings:
        base:
          DEVELOPMENT_TEAM: 6T384SC3AF
          SUPPORTS_MACCATALYST: YES
          DERIVE_MACCATALYST_PRODUCT_BUNDLE_IDENTIFIER: YES
        configs:
            Devel Run:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}.devel
            Devel Archive:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}.devel
            Prod Run:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}
            Prod Archive:
              PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_IDENTIFIER}
    scheme:
      gatherCoverageData: true
      testTargets:
        - ${APP_NAME}Tests_tvOS
        - ModelTests
        - CoreTests
      configVariants:
        - Devel
        - Prod
    dependencies:
      - target: Model_tvOS
      - target: Core_tvOS
    preBuildScripts:
      - name: "SwiftLint"
        script: |
                swiftlint --config "${SRCROOT}/Configuration/config.swiftlint.yml"
    postBuildScripts:
      - name: "Crashlytics"
        script: |
                #"${PODS_ROOT}/FirebaseCrashlytics/run"
        inputFiles: |
                    $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)
  Core:
    type: library.static
    platform: [iOS, tvOS]
    sources: "Sources/Core"
    scheme:
      gatherCoverageData: true
      testTargets:
      - CoreTests
#    dependencies:
#      - package: "RxSwift"
#      - package: "RxSwift"
#        product: "RxRelay"
#      - package: "Boomerang"
  Model:
    type: library.static
    platform: [iOS, tvOS]
    sources: "Sources/Model"
    dependencies:
    - target: Core_${platform}
    scheme:
      gatherCoverageData: true
      testTargets:
      - ModelTests
  CoreTests:
    type: bundle.unit-test
    platform: iOS
    dependencies:
      - target: "Core_iOS"
#      - target: "HostingApp"
    settings:
      groups:
      - testing
    sources:
    - "Tests/Shared"
    - "Tests/Core"
  ModelTests:
    type: bundle.unit-test
    platform: iOS
    settings:
      groups:
      - testing
    sources:
    - "Tests/Shared"
    - "Tests/Model"
    - path: "Tests/JSONMocks"
      buildPhase: resources
    dependencies:
    - target: "Model_iOS"
    - target: "Core_iOS"
    - target: "HostingApp"
  HostingApp:
    type: application
    platform: iOS
    sources:
    - "Sources/HostingApp"
    settings:
        base:
          BUNDLE_IDENTIFIER: com.test.hostingapp
  ${APP_NAME}Tests:
    type: bundle.unit-test
    platform: [iOS, tvOS]
    gatherCoverageData: true
    settings:
      groups:
      - testing
    sources:
    - "Tests/Shared"
    - "Tests/App"
    - path: "Tests/JSONMocks"
      buildPhase: resources
